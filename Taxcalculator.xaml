<Activity mc:Ignorable="sap sap2010" x:Class="Taxcalculator" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="868,3047" sap2010:WorkflowViewState.IdRef="Taxcalculator_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="20">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Taxcalculator" sap:VirtualizedContainerService.HintSize="568,2982" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Default="1" Name="intCounter" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="526,2890" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="488,2663" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="C:\Users\ishwa\Downloads\TaxCalculator.xlsx">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="454,2655" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dataWholesaler" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dataRetailer" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dataManufacturer" />
                  <Variable x:TypeArguments="s:String[]" Name="ArraySheetnames" />
                  <Variable x:TypeArguments="s:String[]" Name="ArrayTaxvalues" />
                  <Variable x:TypeArguments="s:String[]" Name="ArrayTotalcolumnname" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[dataManufacturer]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="412,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Manufacturer">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                </ui:ExcelReadRange>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[dataWholesaler]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="412,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Wholesaler">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                </ui:ExcelReadRange>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[dataRetailer]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="412,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" SheetName="Retailer">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                </ui:ExcelReadRange>
                <Assign sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[ArraySheetnames]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[{"Manufacturer","Wholesaler","Retailer"}]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[ArrayTaxvalues]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[{".05",".1",".15"}]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[ArrayTotalcolumnname]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[{"H2","G2"}]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelWriteCell Cell="F2:F16" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="412,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="[ArraySheetnames(0)]" Text="=(D2*E2)" />
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="412,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Total cost for manufacturer calculated&quot;]" />
                <ui:ExcelWriteCell Cell="G2:G16" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="412,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="[ArraySheetnames(0)]" Text="[&quot;=(F2)*&quot;+ArrayTaxvalues(0)]" />
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="412,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Tax value for manufacturer calculated&quot;]" />
                <ui:ExcelWriteCell Cell="H2:H16" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="412,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="[ArraySheetnames(0)]" Text="=F2+G2" />
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="412,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Final amount for manufacturer calculated&quot;]" />
                <ui:InterruptibleWhile Condition="[intCounter&lt;3]" DisplayName="While" sap:VirtualizedContainerService.HintSize="412,1192" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                  <ui:InterruptibleWhile.Body>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,1027" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelWriteCell Cell="E2:E16" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[ArraySheetnames(intCounter)]" Text="[&quot;=&quot;+ArraySheetnames(intCounter-1)+&quot;!&quot;+ArrayTotalcolumnname(intCounter-1)]" />
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Final amount value from previos sheet copied to &quot;+ArraySheetnames(intCounter)+&quot; sheet&quot;]" />
                      <ui:ExcelWriteCell Cell="F2:F16" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="[ArraySheetnames(intCounter)]" Text="[&quot;=(E2)*&quot;+ArrayTaxvalues(intCounter)]" />
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot; Tax value of &quot;+ArraySheetnames(intcounter)+&quot; calculated&quot;]" />
                      <ui:ExcelWriteCell Cell="G2:G16" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="[ArraySheetnames(intCounter)]" Text="=F2+E2" />
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot; Final amount of &quot;+ArraySheetnames(intcounter)+&quot; calculated&quot;]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[intCounter]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[intCounter+1]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[intCounter.ToString]" />
                    </Sequence>
                  </ui:InterruptibleWhile.Body>
                </ui:InterruptibleWhile>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:NullReferenceException" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:NullReferenceException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:NullReferenceException" Name="exception" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>